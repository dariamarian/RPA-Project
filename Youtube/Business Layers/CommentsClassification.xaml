<Activity mc:Ignorable="sap sap2010" x:Class="CommentsClassification" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uibi="http://schemas.uipath.com/workflow/infrastructure/baf/uibi" xmlns:uiisi="http://schemas.uipath.com/workflow/infrastructure/is/uiisi" xmlns:uoia="clr-namespace:UiPath.OpenAI.IntegrationService.Activities;assembly=UiPath.OpenAI.IntegrationService.Activities" xmlns:uoic="clr-namespace:UiPath.OpenAI.IntegrationService.Client;assembly=UiPath.OpenAI.IntegrationService" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="youtubeLinkList" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="commentsClassificationList" Type="OutArgument(scg:List(scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="maxResults" Type="InArgument(x:Int32)" />
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1031,3775</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CommentsClassification_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Activities</x:String>
      <x:String>UiPath.Platform.Activities</x:String>
      <x:String>UiPath.BAF.Infrastructure.Entity</x:String>
      <x:String>UiPath.IntegrationService.Infrastructure.Descriptor</x:String>
      <x:String>UiPath.BAF.Infrastructure.Enums</x:String>
      <x:String>UiPath.BAF.Infrastructure.Telemetry</x:String>
      <x:String>UiPath.BAF.Infrastructure</x:String>
      <x:String>UiPath.BAF.Infrastructure.Connection</x:String>
      <x:String>UiPath.OpenAI.IntegrationService.Activities</x:String>
      <x:String>UiPath.IntegrationCore.Activities</x:String>
      <x:String>UiPath.BAF.Activities</x:String>
      <x:String>UiPath.BAF.Infrastructure.Contracts</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.IntegrationService.Activities.Runtime</AssemblyReference>
      <AssemblyReference>UiPath.BAF.Infrastructure</AssemblyReference>
      <AssemblyReference>UiPath.IntegrationService.Infrastructure</AssemblyReference>
      <AssemblyReference>UiPath.OpenAI.IntegrationService.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CommentsClassification" sap:VirtualizedContainerService.HintSize="724,3832" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="requestLink" />
      <Variable x:TypeArguments="x:String" Name="youtubeApiKey">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Name="comments" />
      <Variable x:TypeArguments="njl:JObject" Name="jsonComments" />
      <Variable x:TypeArguments="x:String" Name="fetchedComments" />
      <Variable x:TypeArguments="x:String" Name="videoId" />
      <Variable x:TypeArguments="x:String" Name="commentClassification" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="auxDict" />
      <Variable x:TypeArguments="x:String" Name="nextPageToken" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="commentsAdded" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Create new Dictionary" sap:VirtualizedContainerService.HintSize="662,82" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[commentsClassificationList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[new List(Of Dictionary(Of String, String))]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Go through each received link" sap:VirtualizedContainerService.HintSize="662,3599" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[youtubeLinkList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="currentVideo" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="628,3413" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="max" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim match As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(videoURL, &quot;v=([^&amp;]+)&quot;)&#xA;&#xA;If match.Success Then&#xA;&#x9;videoId = match.Value.Replace(&quot;v=&quot;, &quot;&quot;)&#xA;End If" DisplayName="Get the video id from the link" sap:VirtualizedContainerService.HintSize="586,165" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="videoUrl">[currentVideo]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="videoId">[videoId]</OutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
            <Assign sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[auxDict]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[commentsAdded &lt; maxResults Or maxResults = -1]" DisplayName="While" sap:VirtualizedContainerService.HintSize="586,2671" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
              <ui:InterruptibleWhile.Body>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,2535" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[maxResults = -1]" sap:VirtualizedContainerService.HintSize="510,522" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[max]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">100</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_16">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[max]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[maxResults]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                  <Assign DisplayName="Create the youtube api request link" sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[requestLink]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["https://youtube.googleapis.com/youtube/v3/commentThreads?pageToken=" + nextPageToken + "&amp;part=snippet&amp;maxResults=" + max.ToString + "&amp;videoId=" + videoId + "&amp;key=" + youtubeApiKey]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;In order to retrieve the comments, the following request was made: &quot; + requestLink.Substring(0, requestLink.Length - 39) + &quot;[API_KEY]&quot;]" />
                  <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" DisplayName="Retrieve comments from youtube" EnableSSLVerification="True" EndPoint="[requestLink]" sap:VirtualizedContainerService.HintSize="510,70" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Result="[fetchedComments]" TimeoutMS="6000">
                    <ui:HttpClient.Attachments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Attachments>
                    <ui:HttpClient.Cookies>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Cookies>
                    <ui:HttpClient.Headers>
                      <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json</InArgument>
                    </ui:HttpClient.Headers>
                    <ui:HttpClient.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Parameters>
                    <ui:HttpClient.UrlSegments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.UrlSegments>
                  </ui:HttpClient>
                  <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Create JSON comments" sap:VirtualizedContainerService.HintSize="510,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[jsonComments]" JsonString="[fetchedComments]" />
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim tokenItems As JToken = fetchedComments?.SelectToken(&quot;items&quot;)&#xA;&#xA;comments = New List(Of String)&#xA;&#xA;If tokenItems IsNot Nothing Then&#xA;&#x9;Dim i As Integer = 1&#xA;    For Each item In tokenItems&#xA;&#x9;&#x9;If i &lt;= numberOfCommentsToFetch Or numberOfCommentsToFetch&lt; 0 Then&#xA;&#x9;        Dim snippetToken As JToken = item?.SelectToken(&quot;snippet&quot;)&#xA;&#x9;        If snippetToken IsNot Nothing Then&#xA;&#x9;            Dim topLevelCommentToken As JToken = snippetToken?.SelectToken(&quot;topLevelComment&quot;)&#xA;&#x9;            If topLevelCommentToken IsNot Nothing Then&#xA;&#x9;                Dim textToken As JToken = topLevelCommentToken?.SelectToken(&quot;snippet&quot;)?.SelectToken(&quot;textOriginal&quot;)&#xA;&#x9;                If textToken IsNot Nothing Then&#xA;&#x9;                    Dim text As String = textToken.ToString&#xA;&#x9;                    comments.Add(text)&#xA;&#x9;                End If&#xA;&#x9;            End If&#xA;&#x9;        End If&#xA;&#x9;&#x9;Else&#xA;&#x9;&#x9;&#x9;Exit For&#xA;&#x9;&#x9;End If&#xA;&#x9;&#x9;i = i + 1&#xA;    Next&#xA;End If&#xA;&#xA;Dim nextPage As JToken = fetchedComments?.SelectToken(&quot;nextPageToken&quot;)&#xA;&#xA;nextPageToken = &quot;&quot;&#xA;&#xA;If nextPage IsNot Nothing Then&#xA;&#x9;nextPageToken = nextPage.ToString&#xA;End If&#xA;" DisplayName="Get comments from json" sap:VirtualizedContainerService.HintSize="510,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="njl:JObject" x:Key="fetchedComments">[jsonComments]</InArgument>
                      <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="comments">[comments]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="nextPageToken">[nextPageToken]</OutArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="numberOfCommentsToFetch">[maxResults - commentsAdded]</InArgument>
                    </ui:InvokeCode.Arguments>
                  </ui:InvokeCode>
                  <Assign sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[commentsAdded]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[commentsAdded + comments.Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Go through each comment" sap:VirtualizedContainerService.HintSize="510,761" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[comments]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="currentComment" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,575" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <uoia:GenerateChatCompletion ActivityInstanceId="116c76e2-a77b-4b49-bd83-ca1ba0584b48" BindingsVersion="2.1" BusinessEntityName="Generate Chat Completion" ConfiguredBusinessEntity="generateChatCompletion" ConnectionId="939d5b7e-5810-4e93-9ea7-3f96738c88b1" Connector="uipath-openai-openai" CrudOperation="Create" DesignConnectionEnabled="True" DisplayName="Classify the comment" sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="GenerateChatCompletion_1">
                            <uoia:GenerateChatCompletion.BusinessEntity>
                              <uibi:BusinessEntity Name="generateChatCompletion">
                                <uibi:BusinessEntity.AllFields>
                                  <scg:List x:TypeArguments="uibi:EntityField" Capacity="15">
                                    <uiisi:OperationEntityField x:TypeArguments="uoic:GenerateChatCompletion" ArgumentDirection="In" ArgumentType="uoic:GenerateChatCompletion" DataType="GenerateChatCompletion" Description="The request data in JSON format for the chat completion" DisplayName="Completion Request" FormDataType="ExpressionTextBox" IsChildEntityField="False" IsCustomField="False" IsDefault="False" IsDeletable="True" IsHidden="True" IsIdField="False" IsMandatory="True" IsParameter="True" IsPriority="False" IsSelected="False" Location="Undefined" Name="body" ShouldFilterOnChange="False" />
                                    <uiisi:OperationEntityField x:TypeArguments="uoic:GenerateChatCompletion" x:Name="__ReferenceID28" ArgumentDirection="Out" ArgumentType="uoic:GenerateChatCompletion" DataType="GenerateChatCompletion" Description="The Generate Chat Completion object returned." DisplayName="Response" FormDataType="ExpressionTextBox" IsChildEntityField="False" IsCustomField="False" IsDefault="False" IsDeletable="True" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="Response" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPermanentlyHidden">False</x:Boolean>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID15" ArgumentDirection="In" ArgumentType="x:String" DataType="String" DefaultValue="Write an email to a new sales lead" Description="The prompt to use for the chat completion(s) generation" DisplayName="Prompt" FormDataType="ExpressionTextBox" InArgumentValue="[&quot;Classify this youtube comment as Positive, Negative or Neutral: &quot; + currentComment + &quot;. Only return one word out of those three.&quot;]" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="True" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.prompt" Order="1" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.ArgumentValue>
                                        <InArgument x:TypeArguments="x:String">["Classify this youtube comment as Positive, Negative or Neutral: " + currentComment + ". Only return one word out of those three."]</InArgument>
                                      </uiisi:OperationEntityField.ArgumentValue>
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                      <uiisi:OperationEntityField.Value>
                                        <VisualBasicValue x:TypeArguments="x:String">["Classify this youtube comment as Positive, Negative or Neutral: " + currentComment + ". Only return one word out of those three."]</VisualBasicValue>
                                      </uiisi:OperationEntityField.Value>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID16" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="Instructions guide the AI to respond in a way that matches your intent. Defaults to null." DisplayName="Instruction" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.instruction" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID17" ArgumentDirection="In" ArgumentType="x:String" DataType="String" DefaultValue="gpt-4" Description="The large language model (LLM) to use for the chat completion. Defaults to gpt-4" DisplayName="Model Name" FormDataType="ExpressionTextBox" InArgumentValue="gpt-4" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.model" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.ArgumentValue>
                                        <InArgument x:TypeArguments="x:String">gpt-4</InArgument>
                                      </uiisi:OperationEntityField.ArgumentValue>
                                      <uiisi:OperationEntityField.EnumValues>
                                        <scg:List x:TypeArguments="x:String" Capacity="2">
                                          <x:String>gpt-4</x:String>
                                          <x:String>gpt-3.5-turbo</x:String>
                                        </scg:List>
                                      </uiisi:OperationEntityField.EnumValues>
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                      <uiisi:OperationEntityField.Value>
                                        <Literal x:TypeArguments="x:String">gpt-4</Literal>
                                      </uiisi:OperationEntityField.Value>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Int32)" ArgumentValue="{x:Reference __ReferenceID1}" Value="{x:Reference __ReferenceID0}" x:Name="__ReferenceID18" ArgumentDirection="In" ArgumentType="s:Nullable(x:Int32)" DataType="Int32" DefaultValue="1920" Description="The maximum number of tokens allowed for the prompt and generated answer. Fewer tokens are less expensive. Defaults to 3840." DisplayName="Max Tokens" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.max_tokens" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.InArgumentValue>
                                        <InArgument x:TypeArguments="s:Nullable(x:Int32)" x:Name="__ReferenceID1">
                                          <Literal x:TypeArguments="s:Nullable(x:Int32)" x:Name="__ReferenceID0" Value="1920" />
                                        </InArgument>
                                      </uiisi:OperationEntityField.InArgumentValue>
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Int32)" ArgumentValue="{x:Reference __ReferenceID3}" Value="{x:Reference __ReferenceID2}" x:Name="__ReferenceID19" ArgumentDirection="In" ArgumentType="s:Nullable(x:Int32)" DataType="Int32" DefaultValue="1" Description="A number of at least 1.  This determines how many completion choices the AI will return. Defaults to 1." DisplayName="N" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.n" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.InArgumentValue>
                                        <InArgument x:TypeArguments="s:Nullable(x:Int32)" x:Name="__ReferenceID3">
                                          <Literal x:TypeArguments="s:Nullable(x:Int32)" x:Name="__ReferenceID2" Value="1" />
                                        </InArgument>
                                      </uiisi:OperationEntityField.InArgumentValue>
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Double)" ArgumentValue="{x:Reference __ReferenceID5}" Value="{x:Reference __ReferenceID4}" x:Name="__ReferenceID20" ArgumentDirection="In" ArgumentType="s:Nullable(x:Double)" DataType="Double" DefaultValue="1" Description="⌘ ⌥ K&#xA;A number between 0 and 2.  Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. Defaults to 1." DisplayName="Temperature" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.temperature" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.InArgumentValue>
                                        <InArgument x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID5">
                                          <Literal x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID4" Value="1" />
                                        </InArgument>
                                      </uiisi:OperationEntityField.InArgumentValue>
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Double)" ArgumentValue="{x:Reference __ReferenceID7}" Value="{x:Reference __ReferenceID6}" x:Name="__ReferenceID21" ArgumentDirection="In" ArgumentType="s:Nullable(x:Double)" DataType="Double" DefaultValue="1" Description="A number between 0 and 1.  The lower the number, the fewer tokens are considered. Defaults to 1." DisplayName="Top P" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.top_p" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.InArgumentValue>
                                        <InArgument x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID7">
                                          <Literal x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID6" Value="1" />
                                        </InArgument>
                                      </uiisi:OperationEntityField.InArgumentValue>
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Boolean)" ArgumentValue="{x:Reference __ReferenceID9}" Value="{x:Reference __ReferenceID8}" x:Name="__ReferenceID22" ArgumentDirection="In" ArgumentType="s:Nullable(x:Boolean)" DataType="Boolean" DefaultValue="false" Description="Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message. Defaults to false." DisplayName="Stream" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.stream" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.InArgumentValue>
                                        <InArgument x:TypeArguments="s:Nullable(x:Boolean)" x:Name="__ReferenceID9">
                                          <Literal x:TypeArguments="s:Nullable(x:Boolean)" x:Name="__ReferenceID8" Value="False" />
                                        </InArgument>
                                      </uiisi:OperationEntityField.InArgumentValue>
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID23" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence. Defaults to null." DisplayName="Stop" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.stop" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Double)" ArgumentValue="{x:Reference __ReferenceID11}" Value="{x:Reference __ReferenceID10}" x:Name="__ReferenceID24" ArgumentDirection="In" ArgumentType="s:Nullable(x:Double)" DataType="Double" DefaultValue="0" Description="Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. Defaults to 0." DisplayName="Presence Penalty" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.presence_penalty" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.InArgumentValue>
                                        <InArgument x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID11">
                                          <Literal x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID10" Value="0" />
                                        </InArgument>
                                      </uiisi:OperationEntityField.InArgumentValue>
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Double)" ArgumentValue="{x:Reference __ReferenceID13}" Value="{x:Reference __ReferenceID12}" x:Name="__ReferenceID25" ArgumentDirection="In" ArgumentType="s:Nullable(x:Double)" DataType="Double" DefaultValue="0" Description="Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. Defaults to 0." DisplayName="Frequency Penalty" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.frequency_penalty" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.InArgumentValue>
                                        <InArgument x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID13">
                                          <Literal x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID12" Value="0" />
                                        </InArgument>
                                      </uiisi:OperationEntityField.InArgumentValue>
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID26" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. Defaults to null." DisplayName="User" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.user" Order="3" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                    </uiisi:OperationEntityField>
                                    <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID27" ArgumentDirection="Out" ArgumentType="x:String" DataType="String" Description="The text for the top choice generated by the AI" DisplayName="Top Generated Text" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="Response.text" OutArgumentValue="[commentClassification]" ShouldFilterOnChange="False">
                                      <uiisi:OperationEntityField.ArgumentValue>
                                        <OutArgument x:TypeArguments="x:String">[commentClassification]</OutArgument>
                                      </uiisi:OperationEntityField.ArgumentValue>
                                      <uiisi:OperationEntityField.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                        </scg:Dictionary>
                                      </uiisi:OperationEntityField.Metadata>
                                      <uiisi:OperationEntityField.Value>
                                        <VisualBasicReference x:TypeArguments="x:String">[commentClassification]</VisualBasicReference>
                                      </uiisi:OperationEntityField.Value>
                                    </uiisi:OperationEntityField>
                                  </scg:List>
                                </uibi:BusinessEntity.AllFields>
                                <uibi:BusinessEntity.EntityMetadata>
                                  <uibi:EntityMetadata Metadata="{x:Reference __ReferenceID14}" DisplayName="Generate Chat Completion" EligibleOperations="1" IsCustomEntity="False" Name="generateChatCompletion" />
                                </uibi:BusinessEntity.EntityMetadata>
                                <uibi:BusinessEntity.Metadata>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object" x:Name="__ReferenceID14">
                                    <x:String x:Key="Object">generateChatCompletion</x:String>
                                    <x:String x:Key="Client">UiPath.OpenAI.IntegrationService.Client.GenerateChatCompletionAPIClient</x:String>
                                    <x:String x:Key="Operation">CreateGenerateChatCompletion</x:String>
                                    <x:String x:Key="Path">/generateChatCompletion</x:String>
                                  </scg:Dictionary>
                                </uibi:BusinessEntity.Metadata>
                                <uibi:BusinessEntity.SelectedFields>
                                  <scg:List x:TypeArguments="uibi:EntityField" Capacity="16">
                                    <x:Reference>__ReferenceID15</x:Reference>
                                    <x:Reference>__ReferenceID16</x:Reference>
                                    <x:Reference>__ReferenceID17</x:Reference>
                                    <x:Reference>__ReferenceID18</x:Reference>
                                    <x:Reference>__ReferenceID19</x:Reference>
                                    <x:Reference>__ReferenceID20</x:Reference>
                                    <x:Reference>__ReferenceID21</x:Reference>
                                    <x:Reference>__ReferenceID22</x:Reference>
                                    <x:Reference>__ReferenceID23</x:Reference>
                                    <x:Reference>__ReferenceID24</x:Reference>
                                    <x:Reference>__ReferenceID25</x:Reference>
                                    <x:Reference>__ReferenceID26</x:Reference>
                                    <x:Reference>__ReferenceID27</x:Reference>
                                    <x:Reference>__ReferenceID28</x:Reference>
                                  </scg:List>
                                </uibi:BusinessEntity.SelectedFields>
                                <uibi:BusinessEntity.TelemetryProperties>
                                  <scg:Dictionary x:TypeArguments="uibi:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                                </uibi:BusinessEntity.TelemetryProperties>
                              </uibi:BusinessEntity>
                            </uoia:GenerateChatCompletion.BusinessEntity>
                            <uoia:GenerateChatCompletion.CachedLookupValues>
                              <scg:Dictionary x:TypeArguments="x:String, scg:List(uiisi:LookupValue)" />
                            </uoia:GenerateChatCompletion.CachedLookupValues>
                            <uoia:GenerateChatCompletion.DesignConnectionRequest>
                              <uiisi:ConnectionParameters AuthType="ElementInstance" ConnectionId="939d5b7e-5810-4e93-9ea7-3f96738c88b1" ConnectionName="OpenAI" ConnectorKey="uipath-openai-openai">
                                <uiisi:ConnectionParameters.TelemetryInfo>
                                  <uiisi:TelemetryInfo ActivityPack="UiPath.OpenAI.IntegrationService.Activities" ActivityPackVersion="6.1.0" Source="StudioDesktop" />
                                </uiisi:ConnectionParameters.TelemetryInfo>
                              </uiisi:ConnectionParameters>
                            </uoia:GenerateChatCompletion.DesignConnectionRequest>
                            <uoia:GenerateChatCompletion.SelectedFields>
                              <scg:List x:TypeArguments="uibi:EntityField" Capacity="14">
                                <x:Reference>__ReferenceID15</x:Reference>
                                <x:Reference>__ReferenceID16</x:Reference>
                                <x:Reference>__ReferenceID17</x:Reference>
                                <x:Reference>__ReferenceID18</x:Reference>
                                <x:Reference>__ReferenceID19</x:Reference>
                                <x:Reference>__ReferenceID20</x:Reference>
                                <x:Reference>__ReferenceID21</x:Reference>
                                <x:Reference>__ReferenceID22</x:Reference>
                                <x:Reference>__ReferenceID23</x:Reference>
                                <x:Reference>__ReferenceID24</x:Reference>
                                <x:Reference>__ReferenceID25</x:Reference>
                                <x:Reference>__ReferenceID26</x:Reference>
                                <x:Reference>__ReferenceID27</x:Reference>
                                <x:Reference>__ReferenceID28</x:Reference>
                              </scg:List>
                            </uoia:GenerateChatCompletion.SelectedFields>
                            <uoia:GenerateChatCompletion.TelemetryProperties>
                              <scg:Dictionary x:TypeArguments="uibi:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                            </uoia:GenerateChatCompletion.TelemetryProperties>
                          </uoia:GenerateChatCompletion>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Comment: &quot; + currentComment + &quot; --&gt; &quot; + commentClassification]" />
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="If Not commentsClassifications.ContainsKey(currentComment) Then&#xA;    commentsClassifications.Add(currentComment, classification)&#xA;End If" DisplayName="Add classification to output" sap:VirtualizedContainerService.HintSize="334,165" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
                            <ui:InvokeCode.Arguments>
                              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="commentsClassifications">[auxDict]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="classification">[commentClassification]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="currentComment">[currentComment]</InArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                  <If Condition="[nextPageToken = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="510,295" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,113" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Break sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Break_1" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ui:InterruptibleWhile.Body>
            </ui:InterruptibleWhile>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="commentsClassificationList.Add(classificationToAdd)" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="586,165" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
              <ui:InvokeCode.Arguments>
                <InOutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="commentsClassificationList">[commentsClassificationList]</InOutArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="classificationToAdd">[auxDict]</InArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
            <Assign sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[commentsAdded]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>